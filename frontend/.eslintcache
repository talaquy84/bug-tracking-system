[{"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\index.js":"1","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\reportWebVitals.js":"2","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\App.js":"3","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\Header.js":"4","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\Footer.js":"5","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\Sidebar.js":"6","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\LoginScreen.js":"7","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\Message.js":"8","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\Loader.js":"9","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\FormContainer.js":"10","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\HomeScreen.js":"11","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\SearchBox.js":"12","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\store.js":"13","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\reducers\\userReducers.js":"14","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\actions\\userActions.js":"15","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\constants\\userConstants.js":"16","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\BarChart.js":"17","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\RegisterScreen.js":"18","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\routing\\PrivateRoute.js":"19","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\utils\\setAuthToken.js":"20","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\ProfileScreen.js":"21","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\CreateTicketScreen.js":"22","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\reducers\\ticketReducers.js":"23","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\constants\\ticketConstants.js":"24","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\actions\\ticketActions.js":"25","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\ProjectScreen.js":"26","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\TicketScreen.js":"27","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\reducers\\projectReducers.js":"28","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\constants\\projectConstants.js":"29","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\actions\\projectActions.js":"30","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\CreateProjectScreen.js":"31","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\ProjectDetailScreen.js":"32"},{"size":594,"mtime":1614809983831,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":2545,"mtime":1617396897073,"results":"36","hashOfConfig":"34"},{"size":1782,"mtime":1616371098714,"results":"37","hashOfConfig":"34"},{"size":338,"mtime":1612593290539,"results":"38","hashOfConfig":"34"},{"size":1655,"mtime":1616363755993,"results":"39","hashOfConfig":"34"},{"size":3188,"mtime":1616801187583,"results":"40","hashOfConfig":"34"},{"size":275,"mtime":1612674841666,"results":"41","hashOfConfig":"34"},{"size":405,"mtime":1617396449990,"results":"42","hashOfConfig":"34"},{"size":348,"mtime":1612675219449,"results":"43","hashOfConfig":"34"},{"size":899,"mtime":1617144303364,"results":"44","hashOfConfig":"34"},{"size":851,"mtime":1614193295696,"results":"45","hashOfConfig":"34"},{"size":969,"mtime":1617240783258,"results":"46","hashOfConfig":"34"},{"size":3385,"mtime":1617150687246,"results":"47","hashOfConfig":"34"},{"size":4126,"mtime":1617150709153,"results":"48","hashOfConfig":"34"},{"size":870,"mtime":1617150456601,"results":"49","hashOfConfig":"34"},{"size":616,"mtime":1615161431695,"results":"50","hashOfConfig":"34"},{"size":3664,"mtime":1616804865220,"results":"51","hashOfConfig":"34"},{"size":718,"mtime":1615430505872,"results":"52","hashOfConfig":"34"},{"size":260,"mtime":1615832076597,"results":"53","hashOfConfig":"34"},{"size":5663,"mtime":1616352623265,"results":"54","hashOfConfig":"34"},{"size":6096,"mtime":1617387216323,"results":"55","hashOfConfig":"34"},{"size":1694,"mtime":1617240976593,"results":"56","hashOfConfig":"34"},{"size":642,"mtime":1617238783828,"results":"57","hashOfConfig":"34"},{"size":2413,"mtime":1617387256832,"results":"58","hashOfConfig":"34"},{"size":3292,"mtime":1617144652495,"results":"59","hashOfConfig":"34"},{"size":3681,"mtime":1617398537817,"results":"60","hashOfConfig":"34"},{"size":1171,"mtime":1617133531812,"results":"61","hashOfConfig":"34"},{"size":438,"mtime":1617132714530,"results":"62","hashOfConfig":"34"},{"size":1641,"mtime":1617131826110,"results":"63","hashOfConfig":"34"},{"size":2247,"mtime":1617132767727,"results":"64","hashOfConfig":"34"},{"size":296,"mtime":1617132547611,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"2tyh6p",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"68"},"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\index.js",[],["142","143"],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\reportWebVitals.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\App.js",["144"],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\Header.js",["145","146","147"],"import React, { useEffect } from 'react'\r\nimport { Navbar, Nav, Container, NavDropdown, Button } from 'react-bootstrap'\r\nimport { Route } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n\r\nconst Header = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const auth = useSelector(state => state.auth)\r\n  const { user } = auth\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar className='border border-secondary border-5' style={{ background: 'WhiteSmoke' }} expand='lg' collapseOnSelect>\r\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n        <Navbar.Collapse id='basic-navbar-nav' >\r\n          {/* Search Box */}\r\n          <Route render={({ history }) => <SearchBox history={history} />} />\r\n\r\n          {/* User Welcome */}\r\n          <Nav className='ml-auto mr-5'>\r\n            <Nav.Link eventKey=\"disabled\" disabled>Welcome, </Nav.Link>\r\n            <NavDropdown title={user ? user.name : \"\"} id='username' >\r\n              <LinkContainer to={`/profile`} >\r\n                <NavDropdown.Item>Profile</NavDropdown.Item>\r\n              </LinkContainer>\r\n              <NavDropdown.Item href='/setting'>Setting</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <LinkContainer to='/'>\r\n                <NavDropdown.Item onClick={logoutHandler}>\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n            </NavDropdown>\r\n\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header >\r\n  )\r\n}\r\n\r\nexport default Header\r\n","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\Footer.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\Sidebar.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\LoginScreen.js",["148"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './LoginScreen.css'\r\nimport { Container, Jumbotron, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { loading, user, error } = userLogin\r\n\r\n  const auth = useSelector(state => state.auth)\r\n  const { user: userAuth } = auth\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/home'\r\n\r\n  useEffect(() => {\r\n    if (user || userAuth) {\r\n      history.push('/home')\r\n    }\r\n  }, [history, user, userAuth, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login({ email, password }))\r\n  }\r\n\r\n  return (\r\n    <div className='login-page bg-info'>\r\n      <Jumbotron className='form-box'>\r\n        <Container>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col>\r\n              <h2 className=\"text-info text-center\">Sign In</h2>\r\n              <hr />\r\n              {/* error && ( if error then) */}\r\n              {error && <Message variant='danger'>{error}</Message>}\r\n              {loading && <Loader />}\r\n              <Form onSubmit={submitHandler} >\r\n                <Form.Group controlId='email'>\r\n                  <Form.Label>Email Address</Form.Label>\r\n                  <Form.Control\r\n                    className='border'\r\n                    type='email'\r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                  <Form.Label >Password</Form.Label>\r\n                  <Form.Control\r\n                    className='border'\r\n                    type='password'\r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button className='btn-block' type='submit' variant='primary' fluid>\r\n                  Sign In\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col>\r\n              New Customer?\r\n            <Link to='/register'> Register</Link>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col>\r\n              Forget your\r\n            <Link to='/register'> Password?</Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Jumbotron>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\Message.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\Loader.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\FormContainer.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\HomeScreen.js",["149"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BarChart from '../components/BarChart'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { listAllProject } from '../actions/projectActions'\r\nimport { listAllTicket } from '../actions/ticketActions'\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(listAllProject())\r\n    dispatch(listAllTicket())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <Container className='py-3 ml-auto'>\r\n          <Row>\r\n            <Col>\r\n              <BarChart />\r\n            </Col>\r\n            <Col><BarChart /></Col>\r\n          </Row>\r\n          <Row>\r\n            <Col><BarChart /></Col>\r\n            <Col><BarChart /></Col>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\SearchBox.js",["150"],"import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    // e.preventDefault()\r\n    // if (keyword.trim()) {\r\n    //   history.push(`/search/${ keyword }`)\r\n    // } else {\r\n    //   history.push('/')\r\n    // }\r\n    //SEARCH\r\n  }\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-2 ml-sm-5 bg-white border border-secondary'\r\n\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox  ","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\store.js",["151"],"import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { auth, userRegister, userLogin, userUpdateProfile, getAllUser } from './reducers/userReducers'\r\nimport { getAllProject, createNewProject } from './reducers/projectReducers'\r\nimport { getAllTicket, getMyTickets, createNewTicket } from './reducers/ticketReducers'\r\n\r\nconst reducer = combineReducers({\r\n  auth,\r\n  userRegister,\r\n  userLogin,\r\n  userUpdateProfile,\r\n  getAllUser,\r\n  getAllTicket,\r\n  getMyTickets,\r\n  createNewTicket,\r\n  getAllProject,\r\n  createNewProject\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\reducers\\userReducers.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\actions\\userActions.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\constants\\userConstants.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\components\\BarChart.js",["152","153","154"],"import React, { useState } from 'react'\r\nimport { Bar, Line, Chart } from 'react-chartjs-2'\r\n\r\nconst BarChart = () => {\r\n  const [chartData, setData] = useState({\r\n\r\n    labels: ['High', 'Medium', 'Low'],\r\n    datasets: [{\r\n      label: 'Number of tickets',\r\n      data: [\r\n        3,\r\n        4,\r\n        5\r\n      ],\r\n      backgroudcolor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n      ],\r\n    }]\r\n  })\r\n\r\n  return (\r\n    <div className='chart'>\r\n      <Bar\r\n        data={chartData}\r\n\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BarChart\r\n","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\RegisterScreen.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\routing\\PrivateRoute.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\utils\\setAuthToken.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\ProfileScreen.js",["155","156"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { updateUserProfile, loadUser } from '../actions/userActions'\r\nimport { listMyTickets } from '../actions/ticketActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\nimport { hidden } from 'colors'\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmedPassword, setConfirmedPassword] = useState('')\r\n  const [role, setRole] = useState('Developer')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const auth = useSelector(state => state.auth)\r\n  const { loading, user } = auth\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const getMyTickets = useSelector(state => state.getMyTickets)\r\n  const { loading: loadingTicket, tickets, error } = getMyTickets\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.name || success) {\r\n      dispatch(loadUser())\r\n    } else {\r\n      setName(user.name)\r\n      setEmail(user.email)\r\n      setRole((user.role))\r\n      dispatch(listMyTickets())\r\n    }\r\n  }, [dispatch, history, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmedPassword) {\r\n      setMessage('Password do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password, role }))\r\n      setPassword('')\r\n      setConfirmedPassword('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <Row className='px-5 py-4'>\r\n        <Col md={3} >\r\n          <h2>User Profile</h2>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {success && <Message variant='success'>Update Successful</Message>}\r\n          {loading && <Loader />}\r\n          <Form>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Your Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter your name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"confirmedPassword\">\r\n              <Form.Label>Confirmed Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirmed Password\"\r\n                value={confirmedPassword}\r\n                onChange={(e) => setConfirmedPassword(e.target.value)}\r\n              />\r\n\r\n              <Form.Group controlId=\"role\">\r\n                <Form.Label>Role</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={role}\r\n                  onChange={(e) => setRole(e.target.value)}\r\n                >\r\n                  <option>Developer</option>\r\n                  <option>Tester</option>\r\n                  <option>Product Manager</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={submitHandler}>\r\n              Update\r\n        </Button>\r\n          </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n          <h2>My Ticket(s)</h2>\r\n          {loadingTicket ? <Loader /> : error ? <Message variant='danger'>\r\n            {error} </Message> : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>NAME</th>\r\n                  <th>DESCRIPTION</th>\r\n                  <th>PRIORITY</th>\r\n                  <th>STATUS</th>\r\n                  <th>PROJECT</th>\r\n                  <th>DATE</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tickets.map(ticket => (\r\n                  <tr key={ticket._id}>\r\n                    <td>{ticket._id}</td>\r\n                    <td>{ticket.name}</td>\r\n                    <td>{ticket.description}</td>\r\n                    <td>{ticket.priority}</td>\r\n                    <td>{ticket.status}</td>\r\n                    <td> {ticket.project.name}</td>\r\n                    <td>{ticket.createdAt.substring(0, 10)}</td>\r\n                    <td>\r\n                      <LinkContainer to={`/order`}>\r\n                        <Button className='btn-sm' variant='light'>Details</Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </ Col>\r\n      </Row>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\CreateTicketScreen.js",["157","158","159","160","161"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createTicket } from '../actions/ticketActions'\r\nimport { listAllProject } from '../actions/projectActions'\r\nimport { listAllUser } from '../actions/userActions'\r\nimport { TICKET_CREATE_RESET } from '../constants/ticketConstants'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nconst CreateTicketScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const getAllUser = useSelector(state => state.getAllUser)\r\n  const { loading: loadingUser, error: errorUser, users } = getAllUser\r\n\r\n  const getAllProject = useSelector(state => state.getAllProject)\r\n  const { loading: loadingProject, error: errorProject, projects } = getAllProject\r\n\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [priority, setPriority] = useState('Low')\r\n  const [status, setStatus] = useState('Pending')\r\n  const [assignedTo, setAssignedTo] = useState({ name: '', email: '', role: '', userId: '' })\r\n  const [project, setProject] = useState({ name: '', projectId: '' })\r\n\r\n  console.log(name, description, priority, status, assignedTo, project)\r\n\r\n  const createNewTicket = useSelector(state => state.createNewTicket)\r\n  const { loading, error, success, ticket } = createNewTicket\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: TICKET_CREATE_RESET })\r\n    // setAssignedTo({ name: users[0].name, email: users[0].email, role: users[0].role, userId: users[0]._id })\r\n    // setProject({ name: projects[0].name, projectId: projects[0]._id })\r\n    if (success) {\r\n      history.push(`${ ticket._id }/edit`)\r\n    }\r\n  }, [dispatch, history, success])\r\n\r\n  const createTicketHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createTicket(\r\n      name, description, priority, status, assignedTo, project))\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <Container className='py-3 px-0 ml-auto'>\r\n        <Row className='px-5 py-4'>\r\n          <Col md={6} >\r\n            <h2>Create New Ticket</h2>\r\n            {success && <Message variant='success'>Project is Created</Message>}\r\n            {errorProject && <Message variant='danger'>{errorProject}</Message>}\r\n            {errorUser && <Message variant='danger'>{errorUser}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loadingProject || loadingUser || loading && <Loader />}\r\n            <Form >\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Ticket Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter project Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"description\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Description of the Project\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"priority\">\r\n                <Form.Label>Priority</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={priority}\r\n                  onChange={(e) => setPriority(e.target.value)}\r\n                >\r\n                  <option>Low</option>\r\n                  <option>Medium</option>\r\n                  <option>High</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"status\">\r\n                <Form.Label>Status</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={status}\r\n                  onChange={(e) => setStatus(e.target.value)}\r\n                >\r\n                  <option>Pending</option>\r\n                  <option>Reviewed</option>\r\n                  <option>Completed</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"assignedTo\">\r\n                <Form.Label>Assigned To</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={assignedTo.name}\r\n                  onChange={(e) => setAssignedTo({\r\n                    name: users[e.target.options.selectedIndex].name,\r\n                    email: users[e.target.options.selectedIndex].email,\r\n                    role: users[e.target.options.selectedIndex].role,\r\n                    userId: users[e.target.options.selectedIndex]._id,\r\n                  })}\r\n                >\r\n                  {loadingUser ? <Loader /> : (users.map((user, index) => {\r\n                    return (\r\n                      <option key={index}>{user.name}</option>\r\n                    )\r\n                  })\r\n                  )}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={project.name}\r\n                  onChange={(e) => setProject({\r\n                    name: projects[e.target.options.selectedIndex].name,\r\n                    projectId: projects[e.target.options.selectedIndex]._id\r\n                  })}\r\n                >\r\n                  {loadingProject ? <Loader /> : (projects.map((project, index) => (\r\n                    <option key={index}>{project.name}</option>\r\n                  ))\r\n                  )}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\" onClick={createTicketHandler}>\r\n                Create\r\n          </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default CreateTicketScreen\r\n","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\reducers\\ticketReducers.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\constants\\ticketConstants.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\actions\\ticketActions.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\ProjectScreen.js",["162"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Container, Row, Col, Table, Button } from 'react-bootstrap'\r\nimport { LinkContainer, Link } from 'react-router-bootstrap'\r\nimport { listAllProject } from '../actions/projectActions'\r\nimport { listAllTicket } from '../actions/ticketActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nconst ProjectScreen = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const getAllProject = useSelector(state => state.getAllProject)\r\n  const { loading, error, projects } = getAllProject\r\n\r\n  useEffect(() => {\r\n    dispatch(listAllProject())\r\n    dispatch(listAllTicket())\r\n  }, [dispatch])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      //DELETE\r\n    }\r\n  }\r\n  return (\r\n    <main>\r\n      <Container className='py-3 px-0 ml-auto'>\r\n        <Row>\r\n          <Col>\r\n            <h2>Projects</h2>\r\n            <LinkContainer to={`/projects/new`}>\r\n              <Button className='ml-auto mr-5' >Create New Projects</Button>\r\n            </LinkContainer>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>\r\n              {error} </Message> : (\r\n              <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>NAME</th>\r\n                    <th>DESCRIPTION</th>\r\n                    <th>TICKETS</th>\r\n                    <th>DATE</th>\r\n                    <th>EDIT</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {projects.map(project => (\r\n                    <tr key={project._id}>\r\n                      <td>{project._id}</td>\r\n                      <td>{project.name}</td>\r\n                      <td>{project.description}</td>\r\n                      <td>\r\n                        <ul>\r\n                          {project.ticket.map(ticket => (\r\n                            <LinkContainer to={`/tickets/${ ticket.ticketId }`} >\r\n                              <li key={ticket._id}>{ticket.ticketName}</li>\r\n                            </LinkContainer>\r\n                          ))}\r\n                        </ul>\r\n                      </td>\r\n                      <td>{project.createdAt.substring(0, 10)}</td>\r\n                      <td>\r\n                        <LinkContainer to={`/projects/${ project._id }/edit`}>\r\n                          <Button variant='light' className='btn-sm'>\r\n                            <i className='fas fa-edit'></i>\r\n                          </Button>\r\n                        </LinkContainer>\r\n                        <Button\r\n                          variant='danger'\r\n                          className='btn-sm'\r\n                          onClick={() => deleteHandler(project._id)\r\n                          }>\r\n                          <i className='fas fa-trash'></i>\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default ProjectScreen\r\n","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\TicketScreen.js",["163","164"],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\reducers\\projectReducers.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\constants\\projectConstants.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\actions\\projectActions.js",[],"Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\CreateProjectScreen.js",["165"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { createProject } from '../actions/projectActions'\r\nimport { PROJECT_CREATE_RESET } from '../constants/projectConstants'\r\n\r\nconst CreateProjectScreen = ({ history }) => {\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const newProject = useSelector(state => state.createNewProject)\r\n  const { loading, success, error, project } = newProject\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PROJECT_CREATE_RESET })\r\n\r\n    if (success) {\r\n      history.push(`${ project._id }/edit`)\r\n    }\r\n  }, [dispatch, history, success])\r\n\r\n  const createProjectHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProject(name, description))\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <Row className='px-5 py-4'>\r\n        <Col >\r\n          <h2>Create New Project</h2>\r\n          {success && <Message variant='success'>Project is Created</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Form >\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Your Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter project Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Description of the Project\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" onClick={createProjectHandler}>\r\n              Create\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default CreateProjectScreen\r\n","Q:\\Users\\Quy\\Desktop\\github\\bug-tracking-system\\frontend\\src\\screens\\ProjectDetailScreen.js",["166","167","168","169"],"import React from 'react'\r\nimport BarChart from '../components/BarChart'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst ProjectDetailScreen = () => {\r\n  return (\r\n    <>\r\n      <main>\r\n        project detail\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProjectDetailScreen\r\n",{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"178","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"179","line":2,"column":23,"nodeType":"176","messageId":"177","endLine":2,"endColumn":32},{"ruleId":"174","severity":1,"message":"180","line":2,"column":47,"nodeType":"176","messageId":"177","endLine":2,"endColumn":53},{"ruleId":"174","severity":1,"message":"181","line":8,"column":8,"nodeType":"176","messageId":"177","endLine":8,"endColumn":21},{"ruleId":"174","severity":1,"message":"182","line":2,"column":23,"nodeType":"176","messageId":"177","endLine":2,"endColumn":34},{"ruleId":"174","severity":1,"message":"183","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":17},{"ruleId":"174","severity":1,"message":"184","line":21,"column":7,"nodeType":"176","messageId":"177","endLine":21,"endColumn":26},{"ruleId":"174","severity":1,"message":"185","line":2,"column":15,"nodeType":"176","messageId":"177","endLine":2,"endColumn":19},{"ruleId":"174","severity":1,"message":"186","line":2,"column":21,"nodeType":"176","messageId":"177","endLine":2,"endColumn":26},{"ruleId":"174","severity":1,"message":"187","line":5,"column":21,"nodeType":"176","messageId":"177","endLine":5,"endColumn":28},{"ruleId":"174","severity":1,"message":"188","line":9,"column":10,"nodeType":"176","messageId":"177","endLine":9,"endColumn":27},{"ruleId":"174","severity":1,"message":"189","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":16},{"ruleId":"174","severity":1,"message":"190","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":24},{"ruleId":"174","severity":1,"message":"191","line":6,"column":10,"nodeType":"176","messageId":"177","endLine":6,"endColumn":21},{"ruleId":"192","severity":1,"message":"193","line":39,"column":6,"nodeType":"194","endLine":39,"endColumn":34,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":57,"column":44,"nodeType":"198","messageId":"199","endLine":57,"endColumn":46},{"ruleId":"196","severity":1,"message":"197","line":57,"column":55,"nodeType":"198","messageId":"199","endLine":57,"endColumn":57},{"ruleId":"174","severity":1,"message":"200","line":4,"column":25,"nodeType":"176","messageId":"177","endLine":4,"endColumn":29},{"ruleId":"174","severity":1,"message":"200","line":4,"column":25,"nodeType":"176","messageId":"177","endLine":4,"endColumn":29},{"ruleId":"174","severity":1,"message":"201","line":15,"column":11,"nodeType":"176","messageId":"177","endLine":15,"endColumn":18},{"ruleId":"192","severity":1,"message":"202","line":24,"column":6,"nodeType":"194","endLine":24,"endColumn":34,"suggestions":"203"},{"ruleId":"174","severity":1,"message":"204","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":16},{"ruleId":"174","severity":1,"message":"179","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":19},{"ruleId":"174","severity":1,"message":"205","line":3,"column":21,"nodeType":"176","messageId":"177","endLine":3,"endColumn":24},{"ruleId":"174","severity":1,"message":"206","line":3,"column":26,"nodeType":"176","messageId":"177","endLine":3,"endColumn":29},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","'FormContainer' is defined but never used.","'useSelector' is defined but never used.","'keyword' is assigned a value but never used.","'userInfoFromStorage' is assigned a value but never used.","'Line' is defined but never used.","'Chart' is defined but never used.","'setData' is assigned a value but never used.","'USER_UPDATE_RESET' is defined but never used.","'hidden' is defined but never used.","'listAllProject' is defined but never used.","'listAllUser' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ticket._id'. Either include it or remove the dependency array.","ArrayExpression",["209"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'Link' is defined but never used.","'success' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'project._id'. Either include it or remove the dependency array.",["210"],"'BarChart' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [dispatch, history, success, ticket._id]",{"range":"215","text":"216"},"Update the dependencies array to be: [dispatch, history, project._id, success]",{"range":"217","text":"218"},[1782,1810],"[dispatch, history, success, ticket._id]",[839,867],"[dispatch, history, project._id, success]"]